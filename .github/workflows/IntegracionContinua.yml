# Nombre del workflow (aparecerá en la pestaña "Actions" de GitHub)
name: Node.js CI

# Define cuándo se debe ejecutar el workflow
on:
  # Se activa en cualquier push a la rama 'main'
  push:
    branches: [ main ]
  # Se activa en cualquier pull request que apunte a la rama 'main'
  pull_request:
    branches: [ main ]

# Define los trabajos (jobs) que se ejecutarán
jobs:
  # Nombramos nuestro trabajo 'build-and-test'
  build-and-test:
    # El tipo de máquina virtual en la que se ejecutará
    runs-on: ubuntu-latest

    # Los pasos que componen el trabajo
    steps:
      # 1. Clona tu repositorio en la máquina virtual
      - name: Check out repository code
        uses: actions/checkout@v4

      # 2. Configura el entorno de Node.js
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          # Especifica la versión de Node (18.x es una LTS estable)
          node-version: '22.x'
          # Habilita el caché de 'npm' para acelerar futuras instalaciones
          cache: 'npm'

      # 3. Instala las dependencias
      - name: Install dependencies
        # Usamos 'npm ci' en lugar de 'npm install'.
        # 'ci' es más rápido y seguro para CI, ya que instala
        # exactamente las versiones del archivo 'package-lock.json'.
        run: npm ci

      # 4. Ejecuta las pruebas
      - name: Run tests
        # Este comando debe estar definido en tu 'package.json'
        run: npm test
